{"version":3,"sources":["components/layout/Spinner.js","helpers/auth.js","reducers/notifyReducer.js","firestore.js","firebase-config.js","actions/types.js","reducers/settingsReducer.js","components/layout/AppNavbar.js","components/clients/Clients.js","components/layout/Sidebar.js","components/layout/Dashboard.js","components/clients/AddClient.js","components/clients/EditClient.js","components/clients/ClientDetails.js","actions/notifyActions.js","components/layout/Alert.js","components/auth/Login.js","components/auth/Register.js","components/settings/Settings.js","actions/settingsActions.js","App.js","registerServiceWorker.js","index.js"],"names":["Spinner","className","locationHelper","locationHelperBuilder","UserIsAuthenticated","connectedRouterRedirect","wrapperDisplayName","AuthenticatingComponent","LoadingScreen","allowRedirectBack","redirectPath","state","ownProps","getRedirectQueryParam","authenticatingSelector","firebase","auth","isInitializing","profile","isLoaded","authenticatedSelector","isEmpty","UserIsNotAuthenticated","initialState","message","messageType","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","settings","timestampsInSnapshots","createStoreWithFirebase","compose","reactReduxFirebase","userProfile","useFirestoreForProfile","reduxFirestore","createStore","rootReducer","combineReducers","firebaseReducer","firestoreReducer","notify","action","type","disableBalanceOnAdd","payload","disableBalanceOnEdit","allowRegistration","localStorage","getItem","setItem","JSON","stringify","store","parse","window","__REDUX_DEVTOOLS_EXTENSION__","AppNavbar","isAuthenticated","onLogoutClick","e","preventDefault","props","logout","this","to","data-toggle","data-target","id","email","href","onClick","uid","Component","firebaseConnect","connect","Clients","totalOwed","clients","parseFloat","toFixed","map","client","key","firstName","lastName","balance","reduce","total","toString","firestoreConnect","collection","ordered","Sidebar","AddClient","phone","onChange","setState","target","name","value","onSubmit","newClient","history","add","then","push","htmlFor","minLength","required","disabled","EditClient","firstNameInput","React","createRef","lastNameInput","emailInput","phoneInput","balanceInput","updClient","current","update","doc","ref","defaultValue","storeAs","match","params","ClientDetails","showBalanceUpdate","balanceUpdateAmount","balanceSubmit","clientUpdate","onDeleteClick","delete","balanceForm","placeholder","classnames","notifyUser","Alert","Login","password","login","catch","err","style","width","createUser","Settings","disableBalanceOnAddChange","setDisableBalanceOnAdd","disableBalanceOnEditChange","setDisableBalanceOnEdit","allowRegistrationChange","setAllowRegistration","checked","particleOpt","particles","number","color","size","shape","interactivity","events","onhover","enable","mode","App","exact","path","component","Dashboard","Register","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","div","document","createElement","ReactDOM","render","getElementById","unmountComponentAtNode","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.83f66f0b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n const Spinner = () => {\r\n  return (\r\n    <div className='loader'></div>\r\n  )\r\n}\r\n\r\nexport default Spinner","import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper'\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect'\nimport LoadingScreen from '../components/layout/Spinner'\n\nconst locationHelper = locationHelperBuilder({})\n\nexport const UserIsAuthenticated = connectedRouterRedirect({\n  wrapperDisplayName: 'UserIsAuthenticated',\n  AuthenticatingComponent: LoadingScreen,\n  allowRedirectBack: true,\n  redirectPath: (state, ownProps) =>\n    locationHelper.getRedirectQueryParam(ownProps) || '/login',\n  authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\n    !auth.isLoaded || isInitializing === true,\n  authenticatedSelector: ({ firebase: { auth } }) =>\n    auth.isLoaded && !auth.isEmpty\n})\n\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n  wrapperDisplayName: 'UserIsNotAuthenticated',\n  AuthenticatingComponent: LoadingScreen,\n  allowRedirectBack: false,\n  redirectPath: (state, ownProps) =>\n    locationHelper.getRedirectQueryParam(ownProps) || '/',\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\n    !auth.isLoaded || isInitializing === true,\n  authenticatedSelector: ({ firebase: { auth } }) =>\n    auth.isLoaded && auth.isEmpty\n})\n","import { NOTIFY_USER } from '../actions/types'\n\nconst initialState = {\n  message: null,\n  messageType: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case NOTIFY_USER:\n      return {\n        ...state,\n        message: action.message,\n        messageType: action.messageType\n      }\n    default:\n      return state\n  }\n}\n","import { createStore, combineReducers, compose } from 'redux'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\nimport { firebaseConfig } from './firebase-config'\nimport { reactReduxFirebase, firebaseReducer } from 'react-redux-firebase'\nimport { reduxFirestore, firestoreReducer } from 'redux-firestore'\n// Reducers\nimport notifyReducer from './reducers/notifyReducer'\nimport settingsReducer from './reducers/settingsReducer'\n\n\n// react-redux-firebase config\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n}\n\n\n// Init firebase instance\nfirebase.initializeApp(firebaseConfig)\n\n// Init firestore\nconst firestore = firebase.firestore()\nconst settings = { timestampsInSnapshots: true }\nfirestore.settings(settings)\n\n\n// Add reactReduxFirebase enhancer when making store creator\nconst createStoreWithFirebase = compose(\n  reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\n  reduxFirestore(firebase)\n)(createStore)\n\n\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n  notify: notifyReducer,\n  settings: settingsReducer\n})\n\n\n// Check for settings in localStorage\nif (localStorage.getItem('settings') == null) {\n  // Default settings\n  const defaultSettings = {\n    disableBalanceOnAdd: true,\n    disableBalanceOnEdit: false,\n    allowRegistration: true\n  }\n\n  // Set to localStorage\n  localStorage.setItem('settings', JSON.stringify(defaultSettings))\n}\n\n\n// Create initial state\nconst initialState = { settings: JSON.parse(localStorage.getItem('settings')) }\n\n// Create store\nconst store = createStoreWithFirebase(\n  rootReducer,\n  initialState,\n  compose(\n    reactReduxFirebase(firebase),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n)\n\nexport default store\n","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyB4mZwqJdRsNBB6MzPPgGqyLsr8F1uGgg4\",\r\n  authDomain: \"bussinesclientspanel.firebaseapp.com\",\r\n  databaseURL: \"https://bussinesclientspanel.firebaseio.com\",\r\n  projectId: \"bussinesclientspanel\",\r\n  storageBucket: \"bussinesclientspanel.appspot.com\",\r\n  messagingSenderId: \"483123519354\",\r\n  appId: \"1:483123519354:web:23624c6021ba0b52\"\r\n};","export const NOTIFY_USER = 'NOTIFY_USER'\nexport const DISABLE_BALANCE_ON_ADD = 'DISABLE_BALANCE_ON_ADD'\nexport const DISABLE_BALANCE_ON_EDIT = 'DISABLE_BALANCE_ON_EDIT'\nexport const ALLOW_REGISTRATION = 'ALLOW_REGISTRATION'\n\n\n","import {\n  DISABLE_BALANCE_ON_ADD,\n  DISABLE_BALANCE_ON_EDIT,\n  ALLOW_REGISTRATION\n} from '../actions/types'\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case DISABLE_BALANCE_ON_ADD:\n      return {\n        ...state,\n        disableBalanceOnAdd: action.payload\n      }\n    case DISABLE_BALANCE_ON_EDIT:\n      return {\n        ...state,\n        disableBalanceOnEdit: action.payload\n      }\n    case ALLOW_REGISTRATION:\n      return {\n        ...state,\n        allowRegistration: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\n\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { firebaseConnect } from 'react-redux-firebase'\n\nclass AppNavbar extends Component {\n  state = {\n    isAuthenticated: false\n  }\n\n  // instead UNSAFE_componentWillReceiveProps()\n  static getDerivedStateFromProps(props, state) {\n    const { auth } = props\n\n    if (auth.uid) {\n      return { isAuthenticated: true }\n    } else {\n      return { isAuthenticated: false }\n    }\n  }\n\n  onLogoutClick = e => {\n    e.preventDefault()\n\n    const { firebase } = this.props\n    firebase.logout()\n  }\n\n  render() {\n    const { isAuthenticated } = this.state\n    const { auth } = this.props\n    const { allowRegistration } = this.props.settings\n\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-primary shadow bg-white\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            Bussiness Clients \n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarMain\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarMain\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                {auth.email}\n              </li>\n            </ul>\n            {isAuthenticated ? (\n              <ul className=\"navbar-nav ml-auto\">\n               \n                {isAuthenticated ? (\n                  <li className=\"nav-item\">\n                    <Link to=\"/\" className=\"nav-link border-animation\">\n                      Dashboard\n                  </Link>\n                  </li>\n                ) : null}\n                <li className=\"nav-item\">\n                  <Link to=\"/settings\" className=\"nav-link border-animation\">\n                    Settings\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <a\n                    href=\"#!\"\n                    className=\"nav-link border-animation\"\n                    onClick={this.onLogoutClick}\n                  >\n                    Logout\n                  </a>\n                </li>\n              </ul>\n            ) : null}\n\n            {allowRegistration && !isAuthenticated ? (\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to=\"/login\" className=\"nav-link\">\n                    Login\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/register\" className=\"nav-link\">\n                    Register\n                  </Link>\n                </li>\n              </ul>\n            ) : null}\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\n\nAppNavbar.propTypes = {\n  firebase: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n}\n\nexport default compose(\n  firebaseConnect(),\n  connect((state, props) => ({\n    auth: state.firebase.auth,\n    settings: state.settings\n  }))\n)(AppNavbar)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport Spinner from '../layout/Spinner'\n\nclass Clients extends Component {\n  state = {\n    totalOwed: null\n  }\n\n   // instead UNSAFE_componentWillReceiveProps()\n  static getDerivedStateFromProps(props, state) {\n    const { clients } = props\n\n    if (clients) {\n      // Add balances\n      const total = clients.reduce((total, client) => {\n        return total + parseFloat(client.balance.toString())\n      }, 0)\n\n      return { totalOwed: total }\n    }\n\n    return null\n  }\n\n  render() {\n    const { clients } = this.props\n    const { totalOwed } = this.state\n\n    if (clients) {\n      return (\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <h2 className='text-white'>\n                {' '}\n                <i className=\"fas fa-users\" /> Clients{' '}\n              </h2>\n            </div>\n            <div className=\"col-md-6\">\n              <h5 className=\"text-right text-secondary\">\n                Total Owed{' '}\n                <span className=\"text-success\">\n                  &euro;{parseFloat(totalOwed).toFixed(2)} \n                </span>\n              </h5>\n            </div>\n          </div>\n\n          <table className=\"table table-striped\">\n            <thead className=\"thead-inverse\">\n              <tr className='text-yellow font-weight-bold'>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Balance</th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              {clients.map(client => (\n                <tr key={client.id}>\n                  <td>\n                    {client.firstName} {client.lastName}\n                  </td>\n                  <td>{client.email}</td>\n                  <td>&euro;{parseFloat(client.balance).toFixed(2)}</td>\n                  <td>\n                    <Link\n                      to={`/client/${client.id}`}\n                      className=\"btn btn-secondary btn-sm\"\n                    >\n                      <i className=\"fas fa-arrow-circle-right\" /> Details\n                    </Link>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )\n    } else {\n      return <Spinner />\n    }\n  }\n}\n\nClients.propTypes = {\n  firestore: PropTypes.object.isRequired,\n  clients: PropTypes.array\n}\n\nexport default compose(\n  firestoreConnect([{ collection: 'clients' }]),\n  connect((state, props) => ({\n    clients: state.firestore.ordered.clients\n  }))\n)(Clients)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default () => {\n  return (\n    <Link to=\"/client/add\" className=\"btn btn-success btn-block\">\n      <i className=\"fas fa-plus\" /> New\n    </Link>\n  )\n}\n","import React from 'react'\nimport Clients from '../clients/Clients'\nimport Sidebar from '../layout/Sidebar'\n\nexport default () => {\n  return (\n    <div className=\"row mt-5\">\n      <div className=\"col-md-10\">\n        <Clients />\n      </div>\n      <div className=\"col-md-2\">\n        <Sidebar />\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\n\nclass AddClient extends Component {\n  state = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    balance: ''\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value })\n\n  onSubmit = e => {\n    e.preventDefault()\n\n    const newClient = this.state\n\n    const { firestore, history } = this.props\n\n    // If no balance, make 0\n    if (newClient.balance === '') {\n      newClient.balance = 0\n    }\n\n    firestore\n      .add({ collection: 'clients' }, newClient)\n      .then(() => history.push('/'))\n  }\n\n  render() {\n    const { disableBalanceOnAdd } = this.props.settings\n\n    return (\n      <>\n        <div className=\"card mt-5\">\n          <div className=\"card-header\">Add Client</div>\n          <div className=\"card-body\">\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"firstName\"\n                  minLength=\"2\"\n                  required\n                  onChange={this.onChange}\n                  value={this.state.firstName}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"lastName\"\n                  minLength=\"2\"\n                  required\n                  onChange={this.onChange}\n                  value={this.state.lastName}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  onChange={this.onChange}\n                  value={this.state.email}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"phone\">Phone</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"phone\"\n                  minLength=\"10\"\n                  required\n                  onChange={this.onChange}\n                  value={this.state.phone}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"balance\">Balance</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"balance\"\n                  onChange={this.onChange}\n                  value={this.state.balance}\n                  disabled={disableBalanceOnAdd}\n                />\n              </div>\n\n              <input\n                type=\"submit\"\n                value=\"Submit\"\n                className=\"btn btn-outline-primary btn-block\"\n              />\n            </form>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <Link to=\"/\" className=\"btn btn-link\">\n              <i className=\"fas fa-arrow-circle-left\" /> Back To Dashboard\n            </Link>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nAddClient.propTypes = {\n  firestore: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n}\n\nexport default compose(\n  firestoreConnect(),\n  connect((state, props) => ({\n    settings: state.settings\n  }))\n)(AddClient)\n","import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport PropTypes from \"prop-types\"\nimport { compose } from \"redux\"\nimport { connect } from \"react-redux\"\nimport { firestoreConnect } from \"react-redux-firebase\"\nimport Spinner from \"../layout/Spinner\"\n\nclass EditClient extends Component {\n  // Create refs\n  firstNameInput = React.createRef()\n  lastNameInput = React.createRef()\n  emailInput = React.createRef()\n  phoneInput = React.createRef()\n  balanceInput = React.createRef()\n\n  onSubmit = e => {\n    e.preventDefault()\n\n    const { client, firestore, history } = this.props\n\n    // Updated Client\n    const updClient = {\n      firstName: this.firstNameInput.current.value,\n      lastName: this.lastNameInput.current.value,\n      email: this.emailInput.current.value,\n      phone: this.phoneInput.current.value,\n      balance: this.balanceInput.current.value === \"\" ? 0 : this.balanceInput.current.value}\n\n    // Update client in firestore\n    firestore\n      .update({ collection: \"clients\", doc: client.id }, updClient)\n      .then(history.push(\"/\"))\n  }\n\n  render() {\n    const { client } = this.props\n    const { disableBalanceOnEdit } = this.props.settings\n\n    if (client) {\n      return (\n        <div>\n          <div className=\"card mt-5\">\n            <div className=\"card-header\">Edit Client</div>\n            <div className=\"card-body\">\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"firstName\">First Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"firstName\"\n                    minLength=\"2\"\n                    required\n                    ref={this.firstNameInput}\n                    defaultValue={client.firstName}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"lastName\">Last Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"lastName\"\n                    minLength=\"2\"\n                    required\n                    ref={this.lastNameInput}\n                    defaultValue={client.lastName}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    ref={this.emailInput}\n                    defaultValue={client.email}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"phone\">Phone</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"phone\"\n                    minLength=\"10\"\n                    required\n                    ref={this.phoneInput}\n                    defaultValue={client.phone}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"balance\">Balance</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"balance\"\n                    ref={this.balanceInput}\n                    defaultValue={client.balance}\n                    disabled={disableBalanceOnEdit}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  value=\"Submit\"\n                  className=\"btn btn-outline-primary btn-block\"\n                />\n              </form>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <Link to=\"/\" className=\"btn btn-link\">\n                <i className=\"fas fa-arrow-circle-left\" /> Back To Dashboard\n              </Link>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      return <Spinner />\n    }\n  }\n}\n\nEditClient.propTypes = {\n  firestore: PropTypes.object.isRequired\n}\n\nexport default compose(\n  firestoreConnect(props => [\n    { collection: \"clients\", storeAs: \"client\", doc: props.match.params.id }\n  ]),\n  connect(({ firestore: { ordered }, settings }, props) => ({\n    client: ordered.client && ordered.client[0],\n    settings\n  }))\n)(EditClient)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport Spinner from '../layout/Spinner'\nimport classnames from 'classnames'\n\nclass ClientDetails extends Component {\n  state = {\n    showBalanceUpdate: false,\n    balanceUpdateAmount: ''\n  }\n\n  // Update balance\n  balanceSubmit = e => {\n    e.preventDefault()\n\n    const { client, firestore } = this.props\n    const { balanceUpdateAmount } = this.state\n\n    const clientUpdate = {\n      balance: parseFloat(balanceUpdateAmount)\n    }\n\n    // Update in firestore\n    firestore.update({ collection: 'clients', doc: client.id }, clientUpdate)\n  }\n\n  // Delete client\n  onDeleteClick = () => {\n    const { client, firestore, history } = this.props\n\n    firestore\n      .delete({ collection: 'clients', doc: client.id })\n      .then(history.push('/'))\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value })\n\n  render() {\n    const { client } = this.props\n    const { showBalanceUpdate, balanceUpdateAmount } = this.state\n\n    let balanceForm = ''\n    // If balance form should display\n    if (showBalanceUpdate) {\n      balanceForm = (\n        <form onSubmit={this.balanceSubmit}>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"balanceUpdateAmount\"\n              placeholder=\"Add New Balance\"\n              value={balanceUpdateAmount}\n              onChange={this.onChange}\n            />\n            <div className=\"input-group-append\">\n              <input\n                type=\"submit\"\n                value=\"Update\"\n                className=\"btn btn-outline-success\"\n              />\n            </div>\n          </div>\n        </form>\n      )\n    } else {\n      balanceForm = null\n    }\n\n    if (client) {\n      return (\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"btn-group float-right\">\n                <Link to={`/client/edit/${client.id}`} className=\"btn btn-outline-secondary\">\n                  Edit\n                </Link>\n                <button onClick={this.onDeleteClick} className=\"btn btn-danger\">\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n          <hr />\n          <div className=\"card\">\n            <h3 className=\"card-header\">\n              {client.firstName} {client.lastName}\n            </h3>\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-md-8 col-sm-6\">\n                  <h4>\n                    Client ID:{' '}\n                    <span className=\"text-secondary\">{client.id}</span>\n                  </h4>\n                </div>\n                <div className=\"col-md-4 col-sm-6\">\n                  <h3 className=\"pull-right\">\n                    Balance:{' '}\n                    <span\n                      className={classnames({\n                        'text-danger': client.balance > 0,\n                        'text-success': client.balance === 0\n                      })}\n                    >\n                      &euro;{parseFloat(client.balance).toFixed(2)}\n                    </span>{' '}\n                    <small>\n                      <a\n                        href=\"#!\"\n                        onClick={() =>\n                          this.setState({\n                            showBalanceUpdate: !this.state.showBalanceUpdate\n                          })\n                        }\n                      >\n                        <i className=\"fas fa-pencil-alt\" />\n                      </a>\n                    </small>\n                  </h3>\n                  {balanceForm}\n                </div>\n              </div>\n\n              <hr />\n              <ul className=\"list-group\">\n                <li className=\"list-group-item\">\n                  Contact Email: {client.email}\n                </li>\n                <li className=\"list-group-item\">\n                  Contact Phone: {client.phone}\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <Link to=\"/\" className=\"btn btn-link\">\n              <i className=\"fas fa-arrow-circle-left\" /> Back To Dashboard\n              </Link>\n          </div>\n        </div>\n      )\n    } else {\n      return <Spinner />\n    }\n  }\n}\n\nClientDetails.propTypes = {\n  firestore: PropTypes.object.isRequired\n}\n\nexport default compose(\n  firestoreConnect(props => [\n    { collection: 'clients', storeAs: 'client', doc: props.match.params.id }\n  ]),\n  connect(({ firestore: { ordered } }, props) => ({\n    client: ordered.client && ordered.client[0]\n  }))\n)(ClientDetails)\n","import { NOTIFY_USER } from './types'\n\nexport const notifyUser = (message, messageType) => {\n  return {\n    type: NOTIFY_USER,\n    message,\n    messageType\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst Alert = props => {\n  const { message, messageType } = props\n  return (\n    <div\n      className={classnames('alert', {\n        'alert-success text-center': messageType === 'success',\n        'alert-danger text-center': messageType === 'error'\n      })}\n    >\n      {message}\n    </div>\n  )\n}\n\nAlert.propTypes = {\n  message: PropTypes.string.isRequired,\n  messageType: PropTypes.string.isRequired\n}\n\nexport default Alert\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { firebaseConnect } from 'react-redux-firebase'\nimport { notifyUser } from '../../actions/notifyActions'\nimport Alert from '../layout/Alert'\n\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  onSubmit = e => {\n    e.preventDefault()\n\n    const { firebase, notifyUser } = this.props\n    const { email, password } = this.state\n\n    firebase\n      .login({\n        email,\n        password\n      })\n      .catch(err => notifyUser('Invalid Login Credentials', 'error'))\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value })\n\n  render() {\n    const { message, messageType } = this.props.notify\n    const { email, password } = this.state\n    return (\n      <div className=\"centered\" style={{ width: '60%' }}>\n        <div className=\"row\">\n          <div className=\"col-md-6 mx-auto\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                {message ? (\n                  <Alert message={message} messageType={messageType} />\n                ) : null}\n                <h1 className=\"text-center pb-4 pt-3\">\n                  <span className=\"text-primary\">\n                    <i className=\"fas fa-lock\" /> Login\n              </span>\n                </h1>\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"email\"\n                      required\n                      value={email}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      name=\"password\"\n                      required\n                      value={password}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <input\n                    type=\"submit\"\n                    value=\"Login\"\n                    className=\"btn btn-primary btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nLogin.propTypes = {\n  firebase: PropTypes.object.isRequired,\n  notify: PropTypes.object.isRequired,\n  notifyUser: PropTypes.func.isRequired\n}\n\nexport default compose(\n  firebaseConnect(),\n  connect(\n    (state, props) => ({\n      notify: state.notify\n    }),\n    { notifyUser }\n  )\n)(Login)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { firebaseConnect } from 'react-redux-firebase'\nimport { notifyUser } from '../../actions/notifyActions'\nimport Alert from '../layout/Alert'\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  componentWillMount() {\n    const { allowRegistration } = this.props.settings\n\n    if (!allowRegistration) {\n      this.props.history.push('/')\n    }\n  }\n\n  onSubmit = e => {\n    e.preventDefault()\n\n    const { firebase, notifyUser } = this.props\n    const { email, password } = this.state\n\n    // Register with firebase\n    firebase\n      .createUser({ email, password })\n      .catch(err => notifyUser('That User Already Exists', 'error'))\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value })\n\n  render() {\n    const { message, messageType } = this.props.notify\n    return (\n      <div className=\"centered\" style={{ width: '60%' }}>\n        <div className=\"row\">\n          <div className=\"col-md-6 mx-auto\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                {message ? (\n                  <Alert message={message} messageType={messageType} />\n                ) : null}\n                <h1 className=\"text-center pb-4 pt-3\">\n                  <span className=\"text-primary\">\n                    <i className=\"fas fa-lock\" /> Register\n                </span>\n                </h1>\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"email\"\n                      required\n                      value={this.state.email}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      name=\"password\"\n                      required\n                      value={this.state.password}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <input\n                    type=\"submit\"\n                    value=\"Register\"\n                    className=\"btn btn-primary btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>  \n    )\n  }\n}\n\nLogin.propTypes = {\n  firebase: PropTypes.object.isRequired,\n  notify: PropTypes.object.isRequired,\n  notifyUser: PropTypes.func.isRequired\n}\n\nexport default compose(\n  firebaseConnect(),\n  connect(\n    (state, props) => ({\n      notify: state.notify,\n      settings: state.settings\n    }),\n    { notifyUser }\n  )\n)(Login)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {\n  setAllowRegistration,\n  setDisableBalanceOnAdd,\n  setDisableBalanceOnEdit\n} from '../../actions/settingsActions'\n\nclass Settings extends Component {\n  disableBalanceOnAddChange = () => {\n    const { setDisableBalanceOnAdd } = this.props\n    setDisableBalanceOnAdd()\n  }\n\n  disableBalanceOnEditChange = () => {\n    const { setDisableBalanceOnEdit } = this.props\n    setDisableBalanceOnEdit()\n  }\n\n  allowRegistrationChange = () => {\n    const { setAllowRegistration } = this.props\n    setAllowRegistration()\n  }\n\n  render() {\n    const {\n      disableBalanceOnAdd,\n      disableBalanceOnEdit,\n      allowRegistration\n    } = this.props.settings\n\n    return (\n      <div>\n        <div className=\"card mt-5\">\n          <div className=\"card-header\">Edit Settings</div>\n          <div className=\"card-body\">\n            <form>\n              <div className=\"form-group\">\n                <label>Allow Registration</label>{' '}\n                <input\n                  type=\"checkbox\"\n                  name=\"allowRegistration\"\n                  checked={!!allowRegistration}\n                  onChange={this.allowRegistrationChange}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Disable Balance On Add</label>{' '}\n                <input\n                  type=\"checkbox\"\n                  name=\"disableBalanceOnAdd\"\n                  checked={!!disableBalanceOnAdd}\n                  onChange={this.disableBalanceOnAddChange}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Disable Balance On Edit</label>{' '}\n                <input\n                  type=\"checkbox\"\n                  name=\"disableBalanceOnEdit\"\n                  checked={!!disableBalanceOnEdit}\n                  onChange={this.disableBalanceOnEditChange}\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <Link to=\"/\" className=\"btn btn-link\">\n              <i className=\"fas fa-arrow-circle-left\" /> Back To Dashboard\n            </Link>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nSettings.propTypes = {\n  settings: PropTypes.object.isRequired,\n  setDisableBalanceOnAdd: PropTypes.func.isRequired,\n  setDisableBalanceOnEdit: PropTypes.func.isRequired,\n  setAllowRegistration: PropTypes.func.isRequired\n}\n\nexport default connect(\n  (state, props) => ({\n    auth: state.firebase.auth,\n    settings: state.settings\n  }),\n  { setAllowRegistration, setDisableBalanceOnAdd, setDisableBalanceOnEdit }\n)(Settings)\n","import {\n  DISABLE_BALANCE_ON_ADD,\n  DISABLE_BALANCE_ON_EDIT,\n  ALLOW_REGISTRATION\n} from './types'\n\nexport const setDisableBalanceOnAdd = () => {\n  // Get settings from localStorage\n  const settings = JSON.parse(localStorage.getItem('settings'))\n\n  // Toggle\n  settings.disableBalanceOnAdd = !settings.disableBalanceOnAdd\n\n  // Set back to localStorage\n  localStorage.setItem('settings', JSON.stringify(settings))\n\n  return {\n    type: DISABLE_BALANCE_ON_ADD,\n    payload: settings.disableBalanceOnAdd\n  }\n}\n\nexport const setDisableBalanceOnEdit = () => {\n  // Get settings from localStorage\n  const settings = JSON.parse(localStorage.getItem('settings'))\n\n  // Toggle\n  settings.disableBalanceOnEdit = !settings.disableBalanceOnEdit\n\n  // Set back to localStorage\n  localStorage.setItem('settings', JSON.stringify(settings))\n\n  return {\n    type: DISABLE_BALANCE_ON_EDIT,\n    payload: settings.disableBalanceOnEdit\n  }\n}\n\nexport const setAllowRegistration = () => {\n  // Get settings from localStorage\n  const settings = JSON.parse(localStorage.getItem('settings'))\n\n  // Toggle\n  settings.allowRegistration = !settings.allowRegistration\n\n  // Set back to localStorage\n  localStorage.setItem('settings', JSON.stringify(settings))\n  return {\n    type: ALLOW_REGISTRATION,\n    payload: settings.allowRegistration\n  }\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { UserIsAuthenticated, UserIsNotAuthenticated } from './helpers/auth'\n\nimport { Provider } from 'react-redux'\nimport store from './firestore'\n\nimport AppNavbar from './components/layout/AppNavbar'\nimport Dashboard from './components/layout/Dashboard'\nimport AddClient from './components/clients/AddClient'\nimport EditClient from './components/clients/EditClient'\nimport ClientDetails from './components/clients/ClientDetails'\nimport Login from './components/auth/Login'\nimport Register from './components/auth/Register'\nimport Settings from './components/settings/Settings'\n\nimport 'bootswatch/dist/lux/bootstrap.min.css'\nimport './styles/App.scss'\n\nimport Particles from 'react-particles-js'\n\nconst particleOpt = {\n\t  particles: {\n\t    number: {\n\t      value: 200\n\t    },\n      color: {\n        value: '#16d47b'\n      },\n\t    size: {\n\t      value: 2\n\t    }\n\t  },\n\n    shape: {\n      type: {\n        value: 'polygon'\n      }\n    },\n\n\t  interactivity: {\n\t    events: {\n\t      onhover: {\n\t        enable: true,\n\t        mode: \"repulse\"\n\t      }\n\t    }\n\t  }\n}\n\nconst App = () => {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Particles params={particleOpt} />\n            <AppNavbar />\n            <div className=\"container\">\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  component={UserIsAuthenticated(Dashboard)}\n                />\n                <Route\n                  exact\n                  path=\"/client/add\"\n                  component={UserIsAuthenticated(AddClient)}\n                />\n                <Route\n                  exact\n                  path=\"/client/edit/:id\"\n                  component={UserIsAuthenticated(EditClient)}\n                />\n                <Route\n                  exact\n                  path=\"/client/:id\"\n                  component={UserIsAuthenticated(ClientDetails)}\n                />\n                <Route\n                  exact\n                  path=\"/login\"\n                  component={UserIsNotAuthenticated(Login)}\n                />\n                <Route\n                  exact\n                  path=\"/register\"\n                  component={UserIsNotAuthenticated(Register)}\n                />\n                <Route\n                  exact\n                  path=\"/settings\"\n                  component={UserIsAuthenticated(Settings)}\n                />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\n// For React-particles\nconst div = document.createElement('div')  \nReactDOM.render(<App />, document.getElementById('root'))\nReactDOM.unmountComponentAtNode(div)\nregisterServiceWorker()\n"],"sourceRoot":""}